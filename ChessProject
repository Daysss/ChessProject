import java.awt.Color;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.BorderFactory;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JApplet;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.xml.soap.SAAJResult;

public class ChessProject extends JApplet {
	
	public JButton[] bt = new JButton[32];// number of darkcheese
	ImageIcon ic = new ImageIcon("Dark.jpg");// dark image
	String[] black = new String[16];
	String[] red = new String[16];
	int[] black_num = { 1, 2, 2, 2, 2, 2, 5 };
	int[] red_num = { 1, 2, 2, 2, 2, 2, 5 };
	Boolean firstHand = false, lastHand = false, nextHand = false;;
	String tipChess = " ",lastChess = " ";
	String siteChess = " ";
	String[] chess = new String[32];
	JButton recBt = null;
	int recCount;
	Boolean[] openVerify=new Boolean[32];//Count the chess ever be opened
	public void init() {
		int width = 400, height = 200;// Size ↓ 50*8,50*4
		this.setSize(width, height);//大小
		JPanel jp = new JPanel();
		jp.setBackground(new Color(249, 219, 165));
		jp.setLayout(new GridLayout(4, 8));// row 4 colown 8 /*what is "colown" ? column?*/
		
		for(int i = 0; i < openVerify.length; i++)//Initialize chess's counter ever be opened
			openVerify[i]=false;
		for (int i = 0; i < bt.length; i++) {//排棋子
			if ((int) (Math.random() * 2) == 0) {
				int check = (int) (Math.random() * 7);
				if (black_num[check] != 0) {
					black_num[check] -= 1;
					chess[i] = "b00" + (check + 1);
				} else
					i--;
			} else {
				int check = (int) (Math.random() * 7);
				if (red_num[check] != 0) {
					red_num[check] -= 1;
					chess[i] = "r00" + (check + 1);
				} else
					i--;
			}
		}
		for ( int i = 0; i < 32; i++) {//加入Icon
			bt[i] = new JButton();
			bt[i].setBorder(BorderFactory.createLineBorder(Color.BLACK));// 設置邊框
			bt[i].setOpaque(true);
			bt[i].setIcon(ic);
			//bt[i].setIcon(new ImageIcon(chess[i] + ".png"));
			//bt add action to listen user's action
			bt[i].addActionListener(new ActionListener() {
				
				@Override
				public void actionPerformed(ActionEvent e) {
					// TODO Auto-generated method stub
					JButton tmpBt = (JButton) e.getSource(); //getting press which button
					try{
						for(int z = 0; z < bt.length; z++){
							if(tmpBt == bt[z]){
								nextHand=true;
	//							if((chess[z].charAt(0) == 'b' && !firstHand) || chess[z].charAt(0) == 'b'){
	//								firstHand = true;
	//								tipChess = "b";
	//							}else if((chess[z].charAt(0) == 'r' && !firstHand) || chess[z].charAt(0) == 'r'){
	//								firstHand = true;
	//								tipChess = "r";
	//							}
	//							if(firstHand && openVerify[z] && lastChess.equals(tipChess))
	//								nextHand=false;
								if(recBt == null && tmpBt == null)
									nextHand=false;
								if(nextHand){
									lastChess = tipChess;
									if(!openVerify[z]){ //determine chess is cover
										openVerify[z]=true;
										bt[z].setIcon(new ImageIcon(chess[z] + ".png"));
										recBt = null;
									}else if(openVerify[z]){ //determine chess isn't cover
										if(recBt == null && chess[z]!=null){
											recBt = tmpBt; //record last time button
											for(recCount = 0; recCount<bt.length; recCount++){
												if(recBt == bt[recCount])
													break;
											}
										}else if(recBt != null){
											if(recCount/8 == 0)
												siteChess = "t";//top
											else if(recCount%8 == 0)
												siteChess = "l";//left
											else if(recCount%8 == 7)
												siteChess = "r";//right
											else if(recCount/8 == 3)
												siteChess = "b";//bottom
											else
												siteChess = "m";//middle
											if(siteChess.equals("t")){
												if(z == recCount+1 || z == recCount-1 || z == recCount+8){
													if(chess[z] != null){
														if(chess[recCount].charAt(0) != chess[z].charAt(0)){
															if(chess[recCount].charAt(3) == '7'){
																if(chess[z].charAt(3) == '1' || chess[z].charAt(3) == '6' || chess[z].charAt(3) == '7'){
																	chess[z] = chess[recCount];
																	chess[recCount] = null;
																	bt[z].setIcon(new ImageIcon(chess[z] + ".png"));
																	bt[recCount].setIcon(new ImageIcon(chess[recCount] + ".png"));
																	recBt = null;
																}
															}else if(chess[recCount].charAt(3) == '6'){
																
															}else if(chess[recCount].charAt(3) == '1'){
																if(chess[z].charAt(3) != '7'){
																	chess[z] = chess[recCount];
																	chess[recCount] = null;
																	bt[z].setIcon(new ImageIcon(chess[z] + ".png"));
																	bt[recCount].setIcon(new ImageIcon(chess[recCount] + ".png"));
																	recBt = null;
																}
															}else {
																if(chess[recCount].charAt(3) <= chess[z].charAt(3)){
																	chess[z] = chess[recCount];
																	chess[recCount] = null;
																	bt[z].setIcon(new ImageIcon(chess[z] + ".png"));
																	bt[recCount].setIcon(new ImageIcon(chess[recCount] + ".png"));
																	recBt = null;
																}else if(chess[recCount].charAt(3) > chess[z].charAt(3))
																	recBt = null;
															}
														}
													}else if(chess[z] == null){
														chess[z] = chess[recCount];
														chess[recCount] = null;
														bt[z].setIcon(new ImageIcon(chess[z] + ".png"));
														bt[recCount].setIcon(new ImageIcon(chess[recCount] + ".png"));
														recBt = null;
													}
												}
											}else if(siteChess.equals("l")){
												if(z == recCount+1 || z == recCount+8 || z == recCount-8){
													if(chess[z] != null){
														if(chess[recCount].charAt(0) != chess[z].charAt(0)){
															if(chess[recCount].charAt(3) == '7'){
																if(chess[z].charAt(3) == '1' || chess[z].charAt(3) == '6' || chess[z].charAt(3) == '7'){
																	chess[z] = chess[recCount];
																	chess[recCount] = null;
																	bt[z].setIcon(new ImageIcon(chess[z] + ".png"));
																	bt[recCount].setIcon(new ImageIcon(chess[recCount] + ".png"));
																	recBt = null;
																}
															}else if(chess[recCount].charAt(3) == '6'){
																
															}else if(chess[recCount].charAt(3) == '1'){
																if(chess[z].charAt(3) != '7'){
																	chess[z] = chess[recCount];
																	chess[recCount] = null;
																	bt[z].setIcon(new ImageIcon(chess[z] + ".png"));
																	bt[recCount].setIcon(new ImageIcon(chess[recCount] + ".png"));
																	recBt = null;
																}
															}else {
																if(chess[recCount].charAt(3) <= chess[z].charAt(3)){
																	chess[z] = chess[recCount];
																	chess[recCount] = null;
																	bt[z].setIcon(new ImageIcon(chess[z] + ".png"));
																	bt[recCount].setIcon(new ImageIcon(chess[recCount] + ".png"));
																	recBt = null;
																}else if(chess[recCount].charAt(3) > chess[z].charAt(3))
																	recBt = null;
															}
														}
													}else if(chess[z] == null){
														chess[z] = chess[recCount];
														chess[recCount] = null;
														bt[z].setIcon(new ImageIcon(chess[z] + ".png"));
														bt[recCount].setIcon(new ImageIcon(chess[recCount] + ".png"));
														recBt = null;
													}
												}
											}else if(siteChess.equals("r")){
												if(z == recCount-1 || z == recCount+8 || z == recCount-8){
													if(chess[z] != null){
														if(chess[recCount].charAt(0) != chess[z].charAt(0)){
															if(chess[recCount].charAt(3) == '7'){
																if(chess[z].charAt(3) == '1' || chess[z].charAt(3) == '6' || chess[z].charAt(3) == '7'){
																	chess[z] = chess[recCount];
																	chess[recCount] = null;
																	bt[z].setIcon(new ImageIcon(chess[z] + ".png"));
																	bt[recCount].setIcon(new ImageIcon(chess[recCount] + ".png"));
																	recBt = null;
																}
															}else if(chess[recCount].charAt(3) == '6'){
																
															}else if(chess[recCount].charAt(3) == '1'){
																if(chess[z].charAt(3) != '7'){
																	chess[z] = chess[recCount];
																	chess[recCount] = null;
																	bt[z].setIcon(new ImageIcon(chess[z] + ".png"));
																	bt[recCount].setIcon(new ImageIcon(chess[recCount] + ".png"));
																	recBt = null;
																}
															}else {
																if(chess[recCount].charAt(3) <= chess[z].charAt(3)){
																	chess[z] = chess[recCount];
																	chess[recCount] = null;
																	bt[z].setIcon(new ImageIcon(chess[z] + ".png"));
																	bt[recCount].setIcon(new ImageIcon(chess[recCount] + ".png"));
																	recBt = null;
																}else if(chess[recCount].charAt(3) > chess[z].charAt(3))
																	recBt = null;
															}
														}
													}else if(chess[z] == null){
														chess[z] = chess[recCount];
														chess[recCount] = null;
														bt[z].setIcon(new ImageIcon(chess[z] + ".png"));
														bt[recCount].setIcon(new ImageIcon(chess[recCount] + ".png"));
														recBt = null;
													}
												}
											}else if(siteChess.equals("b")){
												if(z == recCount+1 || z == recCount-1 || z == recCount-8){
													if(chess[z] != null){
														if(chess[recCount].charAt(0) != chess[z].charAt(0)){
															if(chess[recCount].charAt(3) == '7'){
																if(chess[z].charAt(3) == '1' || chess[z].charAt(3) == '6' || chess[z].charAt(3) == '7'){
																	chess[z] = chess[recCount];
																	chess[recCount] = null;
																	bt[z].setIcon(new ImageIcon(chess[z] + ".png"));
																	bt[recCount].setIcon(new ImageIcon(chess[recCount] + ".png"));
																	recBt = null;
																}
															}else if(chess[recCount].charAt(3) == '6'){
																
															}else if(chess[recCount].charAt(3) == '1'){
																if(chess[z].charAt(3) != '7'){
																	chess[z] = chess[recCount];
																	chess[recCount] = null;
																	bt[z].setIcon(new ImageIcon(chess[z] + ".png"));
																	bt[recCount].setIcon(new ImageIcon(chess[recCount] + ".png"));
																	recBt = null;
																}
															}else {
																if(chess[recCount].charAt(3) <= chess[z].charAt(3)){
																	chess[z] = chess[recCount];
																	chess[recCount] = null;
																	bt[z].setIcon(new ImageIcon(chess[z] + ".png"));
																	bt[recCount].setIcon(new ImageIcon(chess[recCount] + ".png"));
																	recBt = null;
																}else if(chess[recCount].charAt(3) > chess[z].charAt(3))
																	recBt = null;
															}
														}
													}else if(chess[z] == null){
														chess[z] = chess[recCount];
														chess[recCount] = null;
														bt[z].setIcon(new ImageIcon(chess[z] + ".png"));
														bt[recCount].setIcon(new ImageIcon(chess[recCount] + ".png"));
														recBt = null;
													}
												}
											}else if(siteChess.equals("m")){
												if(z == recCount+1 || z == recCount-1 || z == recCount+8 || z == recCount-8){
													if(chess[z] != null){
														if(chess[recCount].charAt(0) != chess[z].charAt(0)){
															if(chess[recCount].charAt(3) == '7'){
																if(chess[z].charAt(3) == '1' || chess[z].charAt(3) == '6' || chess[z].charAt(3) == '7'){
																	chess[z] = chess[recCount];
																	chess[recCount] = null;
																	bt[z].setIcon(new ImageIcon(chess[z] + ".png"));
																	bt[recCount].setIcon(new ImageIcon(chess[recCount] + ".png"));
																	recBt = null;
																}
															}else if(chess[recCount].charAt(3) == '6'){
																
															}else if(chess[recCount].charAt(3) == '1'){
																if(chess[z].charAt(3) != '7'){
																	chess[z] = chess[recCount];
																	chess[recCount] = null;
																	bt[z].setIcon(new ImageIcon(chess[z] + ".png"));
																	bt[recCount].setIcon(new ImageIcon(chess[recCount] + ".png"));
																	recBt = null;
																}
															}else {
																if(chess[recCount].charAt(3) <= chess[z].charAt(3)){
																	chess[z] = chess[recCount];
																	chess[recCount] = null;
																	bt[z].setIcon(new ImageIcon(chess[z] + ".png"));
																	bt[recCount].setIcon(new ImageIcon(chess[recCount] + ".png"));
																	recBt = null;
																}else if(chess[recCount].charAt(3) > chess[z].charAt(3))
																	recBt = null;
															}
														}
													}else if(chess[z] == null){
														chess[z] = chess[recCount];
														chess[recCount] = null;
														bt[z].setIcon(new ImageIcon(chess[z] + ".png"));
														bt[recCount].setIcon(new ImageIcon(chess[recCount] + ".png"));
														recBt = null;
													}
												}
											}												
												
											
										}
									}
								}
							}
						}
					}catch(Exception ex){
						//e.printStackTrace();
					}
				}
			});
			jp.add(bt[i]);
		}
		this.add(jp);
	}
}
